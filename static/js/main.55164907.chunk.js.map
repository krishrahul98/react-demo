{"version":3,"sources":["components/Cockpit/Cockpit.module.css","components/Persons/Person/Person.module.css","components/Persons/Person/Person.js","components/Persons/Persons.js","components/Cockpit/Cockpit.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","person","props","className","Style","Person","onClick","click","name","age","type","onChange","changed","defaultValue","persons","map","index","clicked","key","id","event","cockpit","pClasses","buttonClass","Button","length","push","Red","Bold","showPerson","Cockpit","title","join","App","state","otherState","showPersons","nameChangedHandler","personIndex","findIndex","p","target","value","setState","togglePersonsHandler","doesShow","deletePersonHandler","splice","this","Persons","appTitle","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.55164907.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cockpit\":\"Cockpit_Cockpit__snX-D\",\"Red\":\"Cockpit_Red__2ee36\",\"Bold\":\"Cockpit_Bold__1ww9l\",\"Button\":\"Cockpit_Button__3aZcj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Person\":\"Person_Person__2_l3Y\"};","import React from \"react\";\nimport Style from \"./Person.module.css\";\n\nconst person = (props) => {\n  return (\n    <div className={Style.Person}>\n      <p onClick={props.click}>\n        I'm {props.name} and I am {props.age} years old.\n      </p>\n      <input type='text' onChange={props.changed} defaultValue={props.name} />\n    </div>\n  );\n};\nexport default person;\n","import React from \"react\";\nimport Person from \"./Person/Person\";\n\nconst persons = (props) =>\n  props.persons.map((person, index) => {\n    return (\n      <Person\n        name={person.name}\n        age={person.age}\n        click={() => props.clicked(index)}\n        key={person.id}\n        changed={(event) => props.changed(event, person.id)}\n      />\n    );\n  });\n\nexport default persons;\n","import React from \"react\";\nimport Style from \"./Cockpit.module.css\";\n\nconst cockpit = (props) => {\n  const pClasses = [];\n  const buttonClass = [Style.Button];\n  if (props.persons.length <= 2) {\n    pClasses.push(Style.Red);\n  }\n  if (props.persons.length <= 1) {\n    pClasses.push(Style.Bold);\n  }\n  if (props.showPerson) {\n    buttonClass.push(Style.Red);\n  }\n  return (\n    <div className={Style.Cockpit}>\n      <h1>{props.title}</h1>\n      <p className={pClasses.join(\" \")}>This is really working!</p>\n      <button className={buttonClass.join(\" \")} onClick={props.clicked}>\n        Toggle Persons\n      </button>\n    </div>\n  );\n};\n\nexport default cockpit;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Persons from \"../components/Persons/Persons\";\nimport Cockpit from \"../components/Cockpit/Cockpit\";\n\nclass App extends Component {\n  state = {\n    persons: [\n      { id: \"sgfagf1\", name: \"Rahul\", age: 28 },\n      { id: \"sgfagf2\", name: \"Raj\", age: 21 },\n      { id: \"sgfagf3\", name: \"Amit\", age: 29 },\n    ],\n    otherState: \"some other value\",\n    showPersons: false,\n  };\n\n  nameChangedHandler = (event, id) => {\n    const personIndex = this.state.persons.findIndex((p) => {\n      return p.id === id;\n    });\n    const person = {\n      ...this.state.persons[personIndex],\n    };\n\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState({ persons: persons });\n  };\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({ showPersons: !doesShow });\n  };\n\n  deletePersonHandler = (personIndex) => {\n    const person = [...this.state.persons];\n    person.splice(personIndex, 1);\n    this.setState({ persons: person });\n  };\n\n  render() {\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = (\n        <Persons\n          persons={this.state.persons}\n          clicked={this.deletePersonHandler}\n          changed={this.nameChangedHandler}\n        />\n      );\n    }\n\n    return (\n      <div className='App'>\n        <Cockpit\n          title={this.props.appTitle}\n          persons={this.state.persons}\n          showPerson={this.state.showPersons}\n          clicked={this.togglePersonsHandler}\n        />\n        {persons}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <App appTitle='Person Manager' />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}